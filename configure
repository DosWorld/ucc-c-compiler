#!/bin/sh

set -e

os_cfg(){
	cat > config.mk <<!
UCC_NASM    = ${UCC_NASM}
UCC_LD      = ${UCC_LD}
UCC_ARCH    = ${UCC_ARCH}
UCC_LDFLAGS = ${UCC_LDFLAGS}
!

	cat > src/ucc/cfg.h <<!
#define UCC_NASM    "${UCC_NASM}"
#define UCC_LD      "${UCC_LD}"
#define UCC_ARCH    "${UCC_ARCH}"
#define UCC_LDFLAGS "${UCC_LDFLAGS}"
!

	if [ $1 = Linux ]
	then
		cat <<!
	cmp rax, -1
	jg .fin
	neg rax ; get positive errno
!
	else
		cat <<!
	jnc .fin
	; else, carry - err is in rax
!
	fi > lib/syscall_err.s

	if ! which perl > /dev/null
	then
		if [ $1 = Darwin ]
		then m=" (and darwin syscalls)"
		fi
		echo >&2 "Perl not found, generate strerror$m yourself"
	else
		perl -e '
		for(1 .. 100){
			$! = $_;
			printf "\t\"%s\",\n", $!;
		}
		' > lib/string_strerrs.h

		if [ $1 = Darwin ]
		then perl lib/syscalls_darwin.pl < lib/syscalls_darwin_unix.h > lib/syscalls_darwin.h
		fi
	fi

	echo "Configured for $1"
}


usage(){
	cat >&2 <<!
Usage: $0 [--nasm=path/to/nasm] [clean]
!
	exit 1
}


UCC_NASM=nasm
UCC_LD=ld

UCC_ARCH=elf64
UCC_LDFLAGS=''

clean=0

i=1
while [ $i -le $# ]
do
	arg=`eval echo '$'"$i"`
	if echo "$arg" | grep -- '^--nasm=' > /dev/null
	then
		UCC_NASM="$(echo "$arg" | sed 's/^--nasm=//')"
	elif [ "$arg" = clean ]
	then
		clean=1
	else
		usage
	fi
	i=`expr $i + 1`
done

if [ $clean -ne 0 ]
then
	rm -f config.mk lib/syscall_err.s lib/string_strerrs.h lib/syscalls_darwin.h
	exit
fi

case "$(uname -s)" in
	Darwin)
		UCC_ARCH=macho64
		UCC_LDFLAGS='-e _start -macosx_version_min 10.5'
		os_cfg Darwin
		;;

	Linux)
		os_cfg Linux
		;;

	FreeBSD)
		os_cfg FreeBSD
		;;

	CYGWIN_NT-*)
		os_cfg Cygwin
		;;

	*)
		echo "unknown OS ($(uname -a))" >&2
		exit 1
		;;
esac
